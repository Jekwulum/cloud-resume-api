name: 'deployment'

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: dev

    defaults:
      run:
        shell: bash
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ secrets.AZURE_AD_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_AD_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.AZURE_AD_TENANT_ID }}"
            }
      
      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.9.2
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: './terraform'
      
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.9.2
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: './terraform'

      - name: 'Import Existing Resources'
        run: |
          set -e
          RESOURCE_GROUP_NAME="rg-cloudresumeapi"
          FUNCTION_APP_NAME="function-cloudresumeapi"
          SERVICE_PLAN_NAME="aspcloudresumeapi"

          if az group show --name $RESOURCE_GROUP_NAME; then
            terraform import azurerm_resource_group.main /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/$RESOURCE_GROUP_NAME
          fi

          if az functionapp show --name $FUNCTION_APP_NAME --resource-group $RESOURCE_GROUP_NAME; then
            terraform import azurerm_linux_function_app.main /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/$RESOURCE_GROUP_NAME/providers/Microsoft.Web/sites/$FUNCTION_APP_NAME
          fi

          if az appservice plan show --name $SERVICE_PLAN_NAME --resource-group $RESOURCE_GROUP_NAME; then
            terraform import azurerm_service_plan.main /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/$RESOURCE_GROUP_NAME/providers/Microsoft.Web/serverfarms/$SERVICE_PLAN_NAME
          fi
        working-directory: './terraform'
        env:
          ARM_CLIENT_ID: ${{secrets.AZURE_AD_CLIENT_ID}}
          ARM_CLIENT_SECRET: ${{secrets.AZURE_AD_CLIENT_SECRET}}
          ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
          ARM_TENANT_ID: ${{secrets.AZURE_AD_TENANT_ID}}
      
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.9.2
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: './terraform'
      
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.9.2
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: './terraform'
      
      - name: 'Terraform Apply'
        if: github.ref == 'refs/heads/master'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.9.2
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: './terraform'

